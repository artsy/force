---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: force-web
spec:
  replicas: 14
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: force
        layer: application
        component: web
      name: force-web
      namespace: default
    spec:
      containers:
        - name: force-web
          env:
            - name: DD_TRACE_AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: force-environment
          image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/force:production
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          # readinessProbe:
          #   httpGet:
          #     port: 5000
          #     path: /system/up
          #     httpHeaders:
          #       - name: X-FORWARDED-PROTO
          #         value: https
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          resources:
            requests:
              cpu: 700m
              memory: 1Gi
            limits:
              memory: 1.5Gi
        - name: force-nginx
          image: artsy/docker-nginx:latest
          ports:
            - containerPort: 8080
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx", "-s", "quit"]
          env:
            - name: "NGINX_DEFAULT_CONF"
              value: >
                upstream force {
                    server 127.0.0.1:5000;
                }
                map $http_referer $bad_referer {
                    hostnames;

                    default                    0;

                    # Put regexes for undesired referers here
                    "~youtube.com"             1;
                    "~yahoo.com"               1;
                    "~bing.com"                1;
                }
                log_format postdata '$http_x_forwarded_for - $remote_user [$time_local] '
                   '"$request" $status $bytes_sent '
                   '"$http_referer" "$http_user_agent" [$request_body]';
                server {
                    listen *:8080;
                    access_log  /var/log/nginx/access.log postdata;
                    location /log_in {
                      if ($bad_referer) {
                        return 403;
                      }
                      proxy_set_header Host $host;
                      proxy_set_header X-Forwarded-Proto "https";
                      proxy_redirect off;
                      proxy_read_timeout 60;
                      proxy_send_timeout 60;
                      proxy_pass http://force/log_in;
                    }
                    location /sign_up {
                      if ($bad_referer) {
                        return 403;
                      }
                      proxy_set_header Host $host;
                      proxy_set_header X-Forwarded-Proto "https";
                      proxy_redirect off;
                      proxy_read_timeout 60;
                      proxy_send_timeout 60;
                      proxy_pass http://force/sign_up;
                    }
                    location /about/sms {
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-Proto "https";
                        proxy_redirect off;
                        proxy_read_timeout 60;
                        proxy_send_timeout 60;
                        proxy_pass http://force/about/sms;
                    }
                    location /forgot_password {
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-Proto "https";
                        proxy_redirect off;
                        proxy_read_timeout 60;
                        proxy_send_timeout 60;
                        proxy_pass http://force/forgot_password;
                    }
                    location /gallery-insights/form {
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-Proto "https";
                        proxy_redirect off;
                        proxy_read_timeout 60;
                        proxy_send_timeout 60;
                        proxy_pass http://force/gallery-insights/form;
                    }
                    location /unsupported-browser {
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-Proto "https";
                        proxy_redirect off;
                        proxy_read_timeout 60;
                        proxy_send_timeout 60;
                        proxy_pass http://force/unsupported-browser;
                    }
                    location /venice-biennale/sms {
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-Proto "https";
                        proxy_redirect off;
                        proxy_read_timeout 60;
                        proxy_send_timeout 60;
                        proxy_pass http://force/venice-biennale/sms;
                    }
                    location /artsy-primer/set-sailthru {
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-Proto "https";
                        proxy_redirect off;
                        proxy_read_timeout 60;
                        proxy_send_timeout 60;
                        proxy_pass http://force/artsy-primer/set-sailthru;
                    }
                    location /oauth2/access_token {
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-Proto "https";
                        proxy_redirect off;
                        proxy_read_timeout 60;
                        proxy_send_timeout 60;
                        proxy_pass http://force/oauth2/access_token;
                    }
                    location /signup/editorial {
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-Proto "https";
                        proxy_redirect off;
                        proxy_read_timeout 60;
                        proxy_send_timeout 60;
                        proxy_pass http://force/signup/editorial;
                    }
                    location /news/artsy-editorial-belgian-authorities-reportedly-investigating-two-brothers-smuggled-antiquities-syria {
                      deny all;
                    }
                    location /artwork/xavier-veilhan-light-machine-music {
                      deny all;
                    }
                    location / {
                        if ($request_method = POST) {
                          return 403;
                        }
                        if ($bad_referer) {
                          return 403;
                        }

                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-Proto "https";
                        proxy_redirect off;
                        proxy_read_timeout 60;
                        proxy_send_timeout 60;
                        proxy_pass http://force;
                    }
                }
      dnsPolicy: Default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                      - foreground

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: force-web-canary
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: force
        layer: application
        component: web
      name: force-web-canary
      namespace: default
    spec:
      containers:
        - name: force-web-canary
          env:
            - name: DD_TRACE_AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ENABLE_RATE_LIMITING
              value: "true"
            - name: REQUEST_LIMIT
              value: "100"
            - name: REQUEST_EXPIRE
              value: "60"
            - name: REQUEST_PER_INSTANCE_LIMIT
              value: "120"
            - name: REQUEST_PER_INSTANCE_EXPIRE
              value: "300"
          envFrom:
            - configMapRef:
                name: force-environment
          image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/force:production
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          resources:
            requests:
              cpu: 700m
              memory: 1Gi
            limits:
              memory: 1.5Gi
        - name: force-nginx
          image: artsy/docker-nginx:latest
          ports:
            - containerPort: 8080
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx", "-s", "quit"]
          env:
            - name: "NGINX_DEFAULT_CONF"
              value: >
                upstream force {
                    server 127.0.0.1:5000;
                }
                server {
                    listen *:8080;
                    location / {
                      proxy_set_header Host $host;
                      proxy_set_header X-Forwarded-Proto "https";
                      proxy_redirect off;
                      proxy_read_timeout 60;
                      proxy_send_timeout 60;
                      proxy_pass http://force;
                    }
                }
      dnsPolicy: Default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                      - foreground

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: force
    layer: application
    component: web
  name: force-web
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:iam::585031190124:server-certificate/2018-01-17_artsy-net-wildcard"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-access-log-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-access-log-emit-interval: "60"
    service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-name: "artsy-elb-logs"
    service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-prefix: "production-force"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "300"
spec:
  ports:
    - port: 443
      protocol: TCP
      name: https
      targetPort: 8080
    - port: 80
      protocol: TCP
      name: http
      targetPort: 8080
  selector:
    app: force
    layer: application
    component: web
  sessionAffinity: None
  type: LoadBalancer
