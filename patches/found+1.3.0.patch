diff --git a/node_modules/found/cjs/Link.js b/node_modules/found/cjs/Link.js
index cf5c853..901424a 100644
--- a/node_modules/found/cjs/Link.js
+++ b/node_modules/found/cjs/Link.js
@@ -9,7 +9,7 @@ var _react = _interopRequireWildcard(require("react"));
 var _tinyWarning = _interopRequireDefault(require("tiny-warning"));
 var _useRouter = _interopRequireDefault(require("./useRouter"));
 var _jsxRuntime = require("react/jsx-runtime");
-const _excluded = ["as", "to", "activeClassName", "activeStyle", "activePropName", "match", "router", "exact", "onClick", "target", "children"];
+const _excluded = ["as", "to", "activeClassName", "activeStyle", "activePropName", "match", "router", "exact", "onClick", "children"];
 function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
 function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
 // TODO: Try to type this & simplify those types in next breaking change.
@@ -24,7 +24,6 @@ const Link = /*#__PURE__*/(0, _react.forwardRef)((_ref, ref) => {
       router: propsRouter,
       exact = false,
       onClick,
-      target,
       children
     } = _ref,
     props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
@@ -44,6 +43,9 @@ const Link = /*#__PURE__*/(0, _react.forwardRef)((_ref, ref) => {
     // Otherwise, let the browser handle the link with the computed href if the
     // event wasn't an unmodified left click, or if the link has a target other
     // than _self.
+    const {
+      target
+    } = props;
     if (event.defaultPrevented || event.metaKey || event.altKey || event.ctrlKey || event.shiftKey || event.button !== 0 || target && target !== '_self') {
       return;
     }
diff --git a/node_modules/found/esm/Link.js b/node_modules/found/esm/Link.js
index 866e964..5d050c1 100644
--- a/node_modules/found/esm/Link.js
+++ b/node_modules/found/esm/Link.js
@@ -1,5 +1,5 @@
 import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
-const _excluded = ["as", "to", "activeClassName", "activeStyle", "activePropName", "match", "router", "exact", "onClick", "target", "children"];
+const _excluded = ["as", "to", "activeClassName", "activeStyle", "activePropName", "match", "router", "exact", "onClick", "children"];
 import useEventCallback from '@restart/hooks/useEventCallback';
 import React, { forwardRef } from 'react';
 import warning from 'tiny-warning';
@@ -18,7 +18,6 @@ const Link = /*#__PURE__*/forwardRef((_ref, ref) => {
       router: propsRouter,
       exact = false,
       onClick,
-      target,
       children
     } = _ref,
     props = _objectWithoutPropertiesLoose(_ref, _excluded);
@@ -38,6 +37,9 @@ const Link = /*#__PURE__*/forwardRef((_ref, ref) => {
     // Otherwise, let the browser handle the link with the computed href if the
     // event wasn't an unmodified left click, or if the link has a target other
     // than _self.
+    const {
+      target
+    } = props;
     if (event.defaultPrevented || event.metaKey || event.altKey || event.ctrlKey || event.shiftKey || event.button !== 0 || target && target !== '_self') {
       return;
     }
