machine:
  node:
    version: 6
deployment:
  staging:
    branch: master
    commands:
      - |
        cat >~/.netrc <<EOF
        machine api.heroku.com
          login $HEROKU_EMAIL
          password $HEROKU_TOKEN
        machine git.heroku.com
          login $HEROKU_EMAIL
          password $HEROKU_TOKEN
        EOF
      - chmod 600 ~/.netrc
      - "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow"
      - DEPLOY_ENV=staging yarn deploy-assets
      - git push --force git@heroku.com:force-staging.git $CIRCLE_SHA1:refs/heads/master
  production:
    branch: release
    commands:
      - |
        cat >~/.netrc <<EOF
        machine api.heroku.com
          login $HEROKU_EMAIL
          password $HEROKU_TOKEN
        machine git.heroku.com
          login $HEROKU_EMAIL
          password $HEROKU_TOKEN
        EOF
      - chmod 600 ~/.netrc
      - "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow"
      - DEPLOY_ENV=production yarn deploy-assets
      - git push --force git@heroku.com:force-production.git $CIRCLE_SHA1:refs/heads/master
dependencies:
  override:
    - yarn install
test:
  override:
    - "gem install danger --version '~> 4.0' && danger"
    - case $CIRCLE_NODE_INDEX in 0) yarn acceptance && yarn mocha test/lib && yarn mocha $(find desktop/test -name '*.coffee') && yarn mocha $(find mobile/test -name '*.coffee') ;; 1) yarn mocha $(find desktop/components/*/test -name '*.coffee') && yarn mocha $(find desktop/components/**/*/test -name '*.coffee') ;; 2) yarn mocha $(find desktop/apps/*/test -name '*.coffee') && yarn mocha $(find desktop/apps/*/test -name '*.js') && yarn mocha $(find desktop/apps/*/**/*/test -name '*.coffee') ;; 3) yarn mocha $(find mobile/components/*/test -name '*.coffee') && yarn mocha $(find mobile/components/**/*/test -name '*.coffee') && yarn mocha $(find mobile/apps/*/test -name '*.coffee') && yarn mocha $(find mobile/apps/*/**/*/test -name '*.coffee'); esac:
        parallel: true
