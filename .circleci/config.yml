version: 2.1

orbs:
  artsy-remote-docker: artsy/remote-docker@volatile
  cypress: cypress-io/cypress@3.4.3
  hokusai: artsy/hokusai@volatile
  horizon: artsy/release@volatile
  slack: circleci/slack@4.15.0
  node: circleci/node@5.3.0

executors:
  node-executor:
    docker:
      - image: cimg/node:22.16.0

not_main_or_staging_or_release: &not_main_or_staging_or_release
  filters:
    branches:
      ignore:
        - main
        - staging
        - release

not_staging_or_release: &not_staging_or_release
  filters:
    branches:
      ignore:
        - staging
        - release

only_main: &only_main
  context:
    - hokusai
    - slack-orb
  filters:
    branches:
      only: main

only_release: &only_release
  context:
    - hokusai
    - slack-orb
  filters:
    branches:
      only: release

jobs:
  detect-secrets:
    docker:
      - image: artsy/detect-secrets:ci # pragma: allowlist secret
    resource_class: small
    working_directory: /usr/src/app
    steps:
      - checkout
      - run: git ls-files -z | xargs -0 detect-secrets-hook --baseline .secrets.baseline --verbose

  test:
    executor: node-executor
    working_directory: ~/app
    parallelism: 6
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Run Jest Tests
          command: |
            yarn jest --reporters=default --maxWorkers 2 --reporters=jest-junit --shard=$(expr $CIRCLE_NODE_INDEX + 1)/$CIRCLE_NODE_TOTAL
          environment:
            JEST_JUNIT_OUTPUT_DIR: reports/junit
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: "true"
      - store_artifacts:
          path: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/

  test-legacy:
    executor: node-executor
    working_directory: ~/app
    parallelism: 6
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Run Legacy Jest Tests
          command: |
            yarn jest-enzyme --maxWorkers 2 --reporters=default --reporters=jest-junit --shard=$(expr $CIRCLE_NODE_INDEX + 1)/$CIRCLE_NODE_TOTAL
          environment:
            JEST_JUNIT_OUTPUT_DIR: reports/junit
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: "true"
      - store_artifacts:
          path: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/

  smoke-tests:
    executor:
      name: cypress/default
      node-version: 22.14.0
    working_directory: ~/app
    parallelism: 6
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - node/install-packages:
          pkg-manager: yarn
      - restore_cache:
          keys:
            - cypress-cache-{{ .Branch }}-{{ checksum "package.json" }}
            - cypress-cache-
      - run:
          name: Install Cypress
          command: |
            npx cypress install
      - save_cache:
          paths:
            - ~/.cache/Cypress
          key: cypress-cache-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: Run Smoke Tests
          command: |
            if [ ! -f ".env" ]; then
              echo "Using .env.oss as .env"
              cp .env.oss .env
            fi

            # Remove `nohup` to diagnose server start issues
            nohup yarn start &

            while ! curl --output /dev/null --silent --head --fail http://localhost:4000; do
              sleep 1
            done

            TESTS=$(circleci tests glob "cypress/e2e/**/*" | circleci tests split | paste -sd ',')
            npx cypress run --spec $TESTS
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots

  validate_production_schema:
    executor: node-executor
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Validate Production Schema
          command: node scripts/validateSchemas.js production
      - slack/notify:
          event: fail
          # find channel ID at the botton of channel details view (slack app) or
          # by right clicking on channel, and copying the link. The ID will be
          # visible at the end of that URL.
          channel: C02BC3HEJ
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":warning: *Deployment Failed* :warning:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Hey there! :wave:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "A Force production deployment failed <$CIRCLE_BUILD_URL|on CircleCI> because its local Metaphysics GraphQL schema is incompatible with Metaphysics' production environment."
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "No worries though! Force deploys are usually unblocked by first deploying Metaphysics with a Deploy PR <https://github.com/artsy/metaphysics/compare/release...staging?expand=1|here on GitHub>."
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "As soon as Metaphysics' production environment is up-to-date, you can \"Rerun worflow from failed\" on the <$CIRCLE_BUILD_URL| CircleCI build page> to continue this Force deployment. :+1:"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "image",
                      "image_url": "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png",
                      "alt_text": "CircleCI logo"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "<$CIRCLE_BUILD_URL|$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME@$CIRCLE_BRANCH (#$CIRCLE_BUILD_NUM)> â€” $CIRCLE_JOB"
                    }
                  ]
                }
              ]
            }

  smoke-test-on-live-env:
    docker:
      - image: cypress/included:14.4.0
        environment:
          TERM: xterm
    working_directory: /usr/src/app
    parallelism: 6
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: yarn install
      - run: |
          TESTS=$(circleci tests glob "cypress/e2e/**/*" | circleci tests split | paste -sd ',')
          ./node_modules/.bin/cypress run --config baseUrl=$SMOKE_TEST_TARGET --spec $TESTS
      - store_artifacts:
          path: cypress/screenshots

  create_or_update_review_app:
    executor: hokusai/beta
    steps:
      - hokusai/setup
      - add_ssh_keys
      - checkout
      - setup_remote_docker
      - hokusai/install-aws-iam-authenticator
      - hokusai/configure-hokusai
      - run:
          name: Install jq
          command: curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 > /usr/local/bin/jq
      - run:
          name: Make jq executable
          command: chmod u+x /usr/local/bin/jq
      - run:
          name: "Create or update review app"
          command: |
            set -x
            review_app_name=$(echo $CIRCLE_BRANCH | sed 's/review-app-//')
            kubectl config use-context staging
            namespaces=$(kubectl get namespace)
            echo
            if echo "$namespaces" | grep -qi "$review_app_name"; then
              ./scripts/update_review_app.sh $review_app_name
            else
              ./scripts/build_review_app.sh $review_app_name
            fi

  create_review_app_subdomain:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Create Cloudflare DNS namespace
          command: node scripts/create-review-app-subdomain.js

workflows:
  default:
    jobs:
      - detect-secrets:
          <<: *not_main_or_staging_or_release

      # Danger
      - node/run:
          <<: *not_main_or_staging_or_release
          context:
            - danger-github-oss
          name: check-pr
          pkg-manager: yarn
          yarn-run: danger:ci
          version: 22.14.0

      # Relay
      - node/run:
          <<: *not_main_or_staging_or_release
          name: relay
          pkg-manager: yarn
          yarn-run: relay
          version: 22.14.0

      # Type-check
      - node/run:
          <<: *not_staging_or_release
          name: type-check
          pkg-manager: yarn
          yarn-run: type-check
          version: 22.14.0

      # Jest Tests
      - test:
          <<: *not_staging_or_release

      # Jest Enzyme Tests
      - test-legacy:
          <<: *not_staging_or_release

      # Bundle stats for PRs
      - node/run:
          <<: *not_staging_or_release
          name: bundle-stats
          context: hokusai
          pkg-manager: yarn
          yarn-run: bundle-stats

      # Cypress e2e tests
      - smoke-tests:
          <<: *not_staging_or_release

      - artsy-remote-docker/build:
          <<: *not_staging_or_release
          name: build-and-push-docker
          context:
            - bundle-github
            - hokusai
          executor: hokusai/beta

      - hokusai/deploy-staging:
          <<: *only_main
          name: deploy-staging
          project-name: force
          executor: hokusai/beta
          requires:
            - build-and-push-docker
            - type-check
            - test
            - test-legacy
            - smoke-tests
          post-steps:
            - slack/notify:
                event: fail
                custom: |
                  {
                    "blocks": [
                      {
                        "type": "section",
                        "fields": [
                          {
                            "type": "plain_text",
                            "text": "Force staging deploy has failed!"
                          }
                        ]
                      }
                    ]
                  }

      # Release
      - horizon/block:
          context: horizon
          project_id: 11
          filters:
            branches:
              only:
                - release

      - smoke-test-on-live-env:
          filters:
            branches:
              only:
                - staging

      - validate_production_schema:
          <<: *only_release

      # Production
      - hokusai/deploy-production:
          <<: *only_release
          executor: hokusai/beta
          name: deploy-production
          requires:
            - horizon/block
            - validate_production_schema

      # Review Apps
      - create_or_update_review_app:
          context:
            - hokusai
          filters:
            branches:
              only: /^review-app-.*/
          pre-steps:
            - run:
                command: echo 'export DOCKER_BUILDKIT=1; export BUILDKIT_PROGRESS=plain; export COMPOSE_DOCKER_CLI_BUILD=1;' >> $BASH_ENV

      - create_review_app_subdomain:
          context:
            - cloudflare
          filters:
            branches:
              only: /^review-app-.*/
          requires:
            - create_or_update_review_app
