version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5
  hokusai: artsy/hokusai@0.7.3
  horizon: artsy/release@0.0.1
  node: artsy/node@1.0.0
  slack: circleci/slack@3.4.2
  yarn: artsy/yarn@5.1.1

jobs:
  acceptance:
    docker:
      - image: circleci/node:12-stretch-browsers
    steps:
      - yarn/setup
      - run:
          name: Acceptance Tests
          command: yarn acceptance src/test/acceptance/*.js

  acceptance_cypress:
    docker:
      - image: circleci/node:12-stretch-browsers
    steps:
      - yarn/setup
      - run:
          name: Cypress Tests
          command: yarn test:smoke

  validate_production_schema:
    executor: node/build
    steps:
      - yarn/setup
      - run:
          name: Validate Production Schema
          command: node scripts/validateSchemas.js production

  build:
    executor: node/build
    steps:
      - yarn/setup
      - run:
          name: Build force assets
          command: yarn assets
      - store_artifacts:
          path: ~/project/.artifacts
      - run:
          name: Duplicates Report
          command: curl "https://artsy-dupe-report.now.sh/packages/dupe-report/now.js?owner=artsy&repo=force&buildNum=$CIRCLE_BUILD_NUM"

  danger:
    executor: node/build
    steps:
      - yarn/setup
      - run:
          name: Danger
          command: DANGER_GITHUB_API_TOKEN="15e52de81a772b174cc5""e1813d0083564c69c325" yarn danger ci

  update_review_app:
    executor: hokusai/deploy
    steps:
      - hokusai/setup-docker
      - hokusai/install-aws-iam-authenticator
      - hokusai/configure-hokusai
      - run:
          name: Install jq
          command: curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 > /usr/local/bin/jq
      - run:
          name: Make jq executable
          command: chmod u+x /usr/local/bin/jq
      - run:
          name: "Create or update review app"
          command: |
            review_app_name=$(echo $CIRCLE_BRANCH | sed 's/review-app-//')

            kubectl config use-context staging

            if $(kubectl get namespace | grep -qi $review_app_name); then
              ./scripts/update_review_app.sh $review_app_name
            else
              ./scripts/build_review_app.sh $review_app_name
            fi

not_master_or_staging_or_release: &not_master_or_staging_or_release
  filters:
    branches:
      ignore:
        - master
        - staging
        - release

not_staging_or_release: &not_staging_or_release
  filters:
    branches:
      ignore:
        - staging
        - release

only_master: &only_master
  context: hokusai
  filters:
    branches:
      only: master

only_release: &only_release
  context: hokusai
  filters:
    branches:
      only: release

workflows:
  default:
    jobs:
      - horizon/block:
          <<: *only_release
          context: horizon
          project_id: 11

      # Pre-staging
      - hokusai/test:
          name: test
          <<: *not_staging_or_release
          post-steps:
            - run: mkdir -p ./coverage ./.nyc_output ./reports
            - run:
                name: Copy jest coverage artifacts
                command: docker cp hokusai_force_1:/app/coverage ./
                when: always
            - codecov/upload:
                file: ./coverage/lcov.info
            - run:
                name: Copy mocha coverage artifacts
                command: docker cp hokusai_force_1:/app/.nyc_output ./
                when: always
            - codecov/upload:
                file: ./.nyc_output/lcov.info
            - run:
                name: Copy coverage reports
                command: docker cp hokusai_force_1:/app/reports ./
                when: always
            - store_test_results:
                path: ./reports
      - yarn/update-cache:
          <<: *not_staging_or_release
      - yarn/type-check:
          <<: *not_staging_or_release
      - acceptance:
          <<: *not_staging_or_release
      - acceptance_cypress:
          <<: *not_master_or_staging_or_release
      - build:
          <<: *not_staging_or_release
      - danger:
          <<: *not_staging_or_release

      # Staging
      - hokusai/push:
          name: push-staging-image
          <<: *only_master
          requires:
            - test
            - acceptance
            - build

      - hokusai/deploy-staging:
          <<: *only_master
          project-name: force
          requires:
            - push-staging-image
          post-steps:
            - slack/status:
                success_message: Force staging has been deployed!

      # Release
      - validate_production_schema:
          <<: *only_release
      - hokusai/deploy-production:
          <<: *only_release
          requires:
            - horizon/block
            - validate_production_schema

      - update_review_app:
          context: hokusai
          filters:
            branches:
              only: /^review-app-.*/
